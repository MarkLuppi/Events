// <auto-generated />
using System;
using Events.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Events.Migrations
{
    [DbContext(typeof(EventInfoContext))]
    [Migration("20230312093346_EventsPortal")]
    partial class EventsPortal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Events.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EventTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EventTypeId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2019, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description for Event1.",
                            EventTypeId = 1,
                            Notes = "Notes for Event1",
                            Title = "Event1"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2019, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description for Event2.",
                            EventTypeId = 2,
                            Notes = "Notes for Event2",
                            Title = "Event2"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2019, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description for Event3.",
                            EventTypeId = 2,
                            Notes = "Notes for Event3",
                            Title = "Event3"
                        });
                });

            modelBuilder.Entity("Events.Entities.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EventTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "External for community",
                            Title = "External"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Internal for company",
                            Title = "Internal"
                        });
                });

            modelBuilder.Entity("Events.Entities.Event", b =>
                {
                    b.HasOne("Events.Entities.EventType", "EventType")
                        .WithMany()
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventType");
                });
#pragma warning restore 612, 618
        }
    }
}
